// –ú–æ–¥—É–ª—å 5.
// –ó–∞–Ω—è—Ç—Ç—è 10. –ü—Ä–æ—Ç–æ—Ç–∏–ø–∏ —Ç–∞ –∫–ª–∞—Å–∏

// ====================================================================================================================

// ====================================================================================================================

// Example 1 - –ë–ª–æ–≥–µ—Ä

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Blogger –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –±–ª–æ–≥–µ—Ä–∞ –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏:

// email - –ø–æ—à—Ç–∞, —Ä—è–¥–æ–∫
// age - –≤—ñ–∫, —á–∏—Å–ª–æ
// numberOfPosts - –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —á–∏—Å–ª–æ
// topics - –º–∞—Å–∏–≤ —Ç–µ–º –Ω–∞ —è–∫–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è –±–ª–æ–≥–µ—Ä
// –ö–ª–∞—Å —á–µ–∫–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä - –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ –æ–¥–Ω–æ–π–º–µ–Ω–Ω–∏–º–∏ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏.

// –î–æ–¥–∞–π –º–µ—Ç–æ–¥ getInfo(), —è–∫–∏–π, –ø–æ–≤–µ—Ä—Ç–∞—î —Ä—è–¥–æ–∫: User ${–ø–æ—à—Ç–∞} is ${–≤—ñ–∫} years old and has ${–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤} posts.

// –î–æ–¥–∞–π –º–µ—Ç–æ–¥ updatePostCount(value), —è–∫–∏–π —É –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ value –ø—Ä–∏–π–º–∞—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –¥–æ–¥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ.

// –†—ñ—à–µ–Ω–Ω—è -+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+-

// class User {
//     constructor({ name, age, numberOfPosts, topics } = {}) {
//         this.email = name;
//         this.age = age;
//         this.numberOfPosts = numberOfPosts;
//         this.topics = topics;
//     }

//     getInfo() {
//         return `User ${this.email} is ${this.age} years old and has ${this.numberOfPosts} posts.`;
//     }
//     updatePostCount(value) {
//         return (this.numberOfPosts += value);
//     }
// }

// const mango = new User({
//     name: 'mango@mail.com',
//     age: 24,
//     numberOfPosts: 20,
//     topics: ['tech', 'cooking'],
// });
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 20 posts
// mango.updatePostCount(5);
// console.log(mango.getInfo()); // User mango@mail.com is 24 years old and has 25 posts
// console.log(mango);

// const poly = new User({
//     name: 'poly@mail.com',
//     age: 19,
//     numberOfPosts: 17,
//     topics: ['sports', 'gaming', 'health'],
// });
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 17 posts
// poly.updatePostCount(4);
// console.log(poly.getInfo()); // User poly@mail.com is 19 years old and has 21 posts
// console.log(poly);

// ====================================================================================================================

// ====================================================================================================================

// Example 2 - –°—Ö–æ–≤–∏—â–µ

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Storage —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç–∏ –¥–ª—è –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥–æ–º —Ç–æ–≤–∞—Ä—ñ–≤.
// –ü—Ä–∏ –≤–∏–∫–ª–∏–∫—É –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏–º–µ –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç - –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤ —ñ –∑–∞–ø–∏—Å—É–≤–∞—Ç–∏–º–µ –π–æ–≥–æ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å items.

// –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ –∫–ª–∞—Å—É:

// getItems() - –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —Ç–æ–≤–∞—Ä—ñ–≤.
// addItem(item) - –æ—Ç—Ä–∏–º—É—î –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä —ñ –¥–æ–¥–∞—î –π–æ–≥–æ –¥–æ –ø–æ—Ç–æ—á–Ω–∏—Ö.
// removeItem(item) - –æ—Ç—Ä–∏–º—É—î —Ç–æ–≤–∞—Ä —ñ, —è–∫—â–æ –≤—ñ–Ω —î, –≤–∏–¥–∞–ª—è—î –π–æ–≥–æ –∑ –ø–æ—Ç–æ—á–Ω–∏—Ö.

// –†—ñ—à–µ–Ω–Ω—è -+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+-

// class Storage {
//     constructor(items = []) {
//         this.items = items;
//     }

//     getItems() {
//         return this.items;
//     }

//     addItem(item) {
//         this.items.push(item);
//     }

//     removeItem(item) {
//         const indexDeleteItem = this.items.indexOf(item);
//         return indexDeleteItem >= 0
//             ? this.items.splice(indexDeleteItem, 1)
//             : `There are not the ${item} in the storage`;
//     }
// }

// const storage = new Storage(['üçé', 'üçã', 'üçá', 'üçë']);

// const items = storage.getItems();
// console.table(items); // [ 'üçé', 'üçã', 'üçá', 'üçë' ]

// storage.addItem('üçå');
// console.table(storage.items); // [ 'üçé', 'üçã', 'üçá', 'üçë', 'üçå' ]

// storage.removeItem('üçã');
// console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]

// console.log(storage.removeItem('üçã'));
// console.table(storage.items); // [ 'üçé', 'üçá', 'üçë', 'üçå' ]

// console.log(!!~0);

// ====================================================================================================================

// ====================================================================================================================

// Example 3 - User

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å User —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ login —Ç–∞ email.
// –û–≥–æ–ª–æ—Å–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ #login —Ç–∞ #email, –¥–æ—Å—Ç—É–ø –¥–æ —è–∫–∏—Ö –∑—Ä–æ–±–∏ —á–µ—Ä–µ–∑ –≥–µ—Ç–µ—Ä —Ç–∞ —Å–µ—Ç–µ—Ä login —Ç–∞ email.

// –†—ñ—à–µ–Ω–Ω—è -+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+-

// class User {
//     #login;
//     #email;

//     constructor({ login, email }) {
//         this.#login = login;
//         this.#email = email;
//     }

//     get login() {
//         return this.#login;
//     }

//     set login(newlogin) {
//         this.#login = newlogin;
//     }
// }

// const mango = new User({
//     login: 'Mango',
//     email: 'mango@dog.woof',
// });

// console.log(mango.login); // Mango
// mango.login = 'Mangodoge';
// console.log(mango.login); // Mangodoge

// const poly = new User({
//     login: 'Poly',
//     email: 'poly@mail.com',
// });

// console.log(poly.login); // Poly
// poly.login = 'Polycutie';
// console.log(poly.login); // Polycutie

// ====================================================================================================================

// ====================================================================================================================

// Example 4 - –ù–æ—Ç–∞—Ç–∫–∏

// –ù–∞–ø–∏—à–∏ –∫–ª–∞—Å Notes —è–∫–∏–π –∫–µ—Ä—É—î –∫–æ–ª–µ–∫—Ü—ñ—î—é –Ω–æ—Ç–∞—Ç–æ–∫ —É –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ items.
// –ó–∞–º—ñ—Ç–∫–∞ —Ü–µ –æ–±'—î–∫—Ç —ñ–∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ text —Ç–∞ priority.
// –î–æ–¥–∞–π –∫–ª–∞—Å—É —Å—Ç–∞—Ç–∏—á–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å Priority, —É —è–∫–æ–º—É –∑–±–µ—Ä—ñ–≥–∞—Ç–∏–º–µ—Ç—å—Å—è –æ–±'—î–∫—Ç —ñ–∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–∞–º–∏.

// {
//   LOW: 'low',
//   NORMAL: 'normal',
//   HIGH: 'high'
// }
// –î–æ–¥–∞–π –º–µ—Ç–æ–¥–∏ addNote(note), removeNote(text) —Ç–∞ updatePriority(text, newPriority).

// –†—ñ—à–µ–Ω–Ω—è -+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+-

// class Notes {
//     static Priority = {
//         LOW: 'low',
//         NORMAL: 'normal',
//         HIGH: 'high',
//     };

//     constructor(items = []) {
//         this.items = items;
//     }

//     addNote(note) {
//         this.items.push(note);
//     }

//     removeNote(text) {
//         const idx = this.items.indexOf(this.items.find(item => (item.text = text)));

//         if (!!~idx) {
//             this.items.splice(idx, 1);
//         }
//     }

//     updatePriority(text, newPriority) {
//         const idx = this.items.indexOf(this.items.find(item => (item.text = text)));

//         this.items[idx].priority = newPriority;
//     }
// }

// const myNotes = new Notes([]);
// // console.log(myNotes);

// myNotes.addNote({ text: '–ú–æ—è –ø–µ—Ä—à–∞ –∑–∞–º—ñ—Ç–∫–∞', priority: Notes.Priority.LOW });
// // console.log(myNotes.items);

// myNotes.addNote({
//     text: '–ú–æ—è –¥—Ä—É–≥–∞ –∑–∞–º—ñ—Ç–∫–∞',
//     priority: Notes.Priority.NORMAL,
// });
// // console.log(myNotes.items);

// myNotes.removeNote('–ú–æ—è –ø–µ—Ä—à–∞ –∑–∞–º—ñ—Ç–∫–∞');
// // console.log(myNotes.items);

// myNotes.updatePriority('–ú–æ—è –¥—Ä—É–≥–∞ –∑–∞–º—ñ—Ç–∫–∞', Notes.Priority.HIGH);
// console.log(myNotes.items);

// ====================================================================================================================

// ====================================================================================================================

// Example 5 - Toggle
// –ù–∞–ø–∏—à—ñ—Ç—å –∫–ª–∞—Å Toggle —è–∫–∏–π –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å {isOpen: boolean} —ñ –æ–≥–æ–ª–æ—à—É—î –æ–¥–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å on - —Å—Ç–∞–Ω –≤–∫–ª/–≤–∏–∫–ª (true/false).
// –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ on –ø–æ–≤–∏–Ω–Ω–æ –±—É—Ç–∏ false.

// –†—ñ—à–µ–Ω–Ω—è -+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+_+-

// class Toggle {
//     constructor({ isOpen = false } = {}) {
//         this.on = isOpen;
//     }

//     toggle() {
//         this.on ? (this.on = false) : (this.on = true);
//     }
// }

// const firstToggle = new Toggle({ isOpen: true });
// console.group('firstToggle');
// console.log(firstToggle.on);
// firstToggle.toggle();
// console.log(firstToggle.on);
// console.groupEnd('firstToggle');

// const secondToggle = new Toggle();
// console.group('secondToggle');
// console.log(secondToggle.on);
// secondToggle.toggle();
// console.log(secondToggle.on);
// console.groupEnd('secondToggle');
// ====================================================================================================================

// ====================================================================================================================

/**
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

// https://www.freecodecamp.org/ukrainian/learn/javascript-algorithms-and-data-structures/#basic-javascript

/**
 *
 *
 *
 *
 *
 *
 *
 *
 *
 */

// ====================================================================================================================

// ====================================================================================================================

// -----------------------------------------TASK 1------------------------------------------//
// 1 –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å–ø–∏—Åo–∫ —ñ–º–µ–Ω —É—á–Ω—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É
// 2 –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤—É —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ—á–∫—ñ–≤ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
// 3 –°—Ç–≤–æ—Ä–∏—Ç–∏ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç—É —è–∫–∏–π –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ —ñ–º'—è —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—É –≤ —è–∫–æ–≥–æ –±—ñ–ª—å—à–µ –æ—á–∫—ñ–≤

// const hogvarts = {
//     griffindor: [
//         {
//             name: 'Harry',
//             points: 17,
//         },
//         {
//             name: 'Hermiona',
//             points: 19,
//         },
//         {
//             name: 'Ron',
//             points: 14,
//         },
//     ],
//     sliserin: [
//         {
//             name: 'Draco',
//             points: 17,
//         },
//         {
//             name: 'Goyl',
//             points: 14,
//         },
//         {
//             name: 'Crabbe',
//             points: 5,
//         },
//     ],

//     studentsAtFacultyList(faculty) {
//         return this[faculty].map(student => student.name);
//     },

//     totalPointAtFaculty(faculty) {
//         return this[faculty].reduce((tottalPoint, student) => tottalPoint + student.points, 0);
//     },

//     winer() {
//         const pointsGriffindor = this.totalPointAtFaculty('griffindor');
//         const pointsSliserin = this.totalPointAtFaculty('sliserin');

//         return pointsGriffindor > pointsSliserin ? 'Griffindor' : 'Sliserin';
//     },
// };

// console.log(hogvarts.studentsAtFacultyList('sliserin'));
// console.log(hogvarts.totalPointAtFaculty('griffindor'));
// console.log(hogvarts.winer());

// ====================================================================================================================

// ====================================================================================================================

// -----------------------------------------TASK 2------------------------------------------//

// –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞.
// 1 –ú–∞—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤.
// 2 –ú–æ–≤—É –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è —è–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–∞–π—Ç–∏.
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —ñ–º–µ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ —è–∫—ñ –≤–∏–≤—á–∞—é—Ç—å —Ü—é –º–æ–≤—É.

// const students = [
//     {
//         name: `Lika`,
//         language: `html`,
//     },
//     {
//         name: `Anton`,
//         language: `css`,
//     },
//     {
//         name: `Andriy`,
//         language: `js`,
//     },
//     {
//         name: `Vova`,
//         language: `html`,
//     },
//     {
//         name: `Alina`,
//         language: `css`,
//     },
//     {
//         name: `Egor`,
//         language: `js`,
//     },
//     {
//         name: `Aleksandr`,
//         language: `html`,
//     },
//     {
//         name: `Taras`,
//         language: `css`,
//     },
//     {
//         name: `Ivan`,
//         language: `js`,
//     },
//     {
//         name: `Make`,
//         language: `html`,
//     },
// ];

// function getStudents(students, language) {
//     return students.filter(student => student.language === language).map(student => student.name);
// }

// console.log(getStudents(students, 'html'));

// ====================================================================================================================

// ====================================================================================================================

// -----------------------------------------TASK 3------------------------------------------//

// –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ —Å–∫—ñ–ª—å–∫–∏ –∑–∑–∞—Ä–æ–±–∏–≤ –∫–æ–∂–µ–Ω  —é–∑–µ—Ä
// (—Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
// 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å–∏–≤
// 2 –ø–∞—Ä–∞–º–µ—Ç—Ä —ñ–º—è —Ä–æ–±—ñ—Ç–Ω–∏–∫–∞
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î —Å–∫—ñ–ª—å–∫–∏ –≤—ñ–Ω –∑–∞—Ä–æ–±–∏–≤ (salary*month) )

// –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞—Ä–æ–±—ñ—Ç–∫—É –≤—Å—ñ—Ö —Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤()
// (—Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–∏–π–º–∞—î 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å–∏–≤, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –∑–∞—Ä–æ–±—ñ—Ç–∫—É –≤—Å—ñ—Ö —Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤);

// const workers = [
//     {
//         name: 'Alex',
//         salary: 3500,
//         month: 12,
//     },
//     {
//         name: 'Dima',
//         salary: 2500,
//         month: 9,
//     },
//     {
//         name: 'Oleg',
//         salary: 1500,
//         month: 36,
//     },
// ];

// function salary(workers, workerName) {

//     for (const worker of workers) {
//         if (worker.name === workerName) {
//             return `total salary for ${workerName} is ${worker.salary * worker.month}`;
//         }
//     }

//     return `total salary for all workers is ${workers.reduce(
//         (totalSalary, worker) => totalSalary + worker.salary * worker.month,
//         0
//     )}`;
// }

// console.log(salary(workers, 'Dima'));
// console.log(salary(workers));

// ====================================================================================================================

// ====================================================================================================================

// -----------------------------------------TASK 4------------------------------------------//

// 1 –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
//    1 –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å–∏–≤
//    2 –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–∞–∑–≤–∞ –∫–Ω–∏–≥–∏
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –Ü–º–µ–Ω–∞ —é–∑–µ—Ä—ñ–≤ (—Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä—ñ–Ω–≥–∏) –≤ —è–∫–∏—Ö —î —Ü—è –∫–Ω–∏–≥–∞ ("Harry Potter") \\\ "Anna, Oleksii"

// 2 –ü–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤—ñ–∫ –≤—Å—ñ—Ö —é–∑–µ—Ä—ñ–≤ —É —è–∫–∏—Ö —î –∫–ª—é—á age.

// const friends = [
//     { name: 'Anna', books: ['Bible', 'Harry Potter'], age: 21 },
//     { name: 'Bob', books: ['War and peace', 'Romeo and Juliet'], age: 26 },
//     { name: 'Alice', books: ['War and peace', 'Romeo and Juliet'] },
//     {
//         name: 'Oleksii',
//         books: ['Bible', 'War and peace', 'Harry Potter', 'Romeo and Juliet'],
//         age: 26,
//     },
// ];

// function haveBook(friends = [], book = '') {
//     const friendsWithBook = friends.filter(friend => friend.books.includes(book));

//     return friendsWithBook.reduce(
//         (str, friend) =>
//             str +
//             `(${book}) \\\ ${friend.name}${friend.age ? ' \\ age: ' + friend.age + '\n' : '\n'}`,
//         friendsWithBook.length ? `` : `Friends whith the book is not find`
//     );
// }

// console.log(haveBook(friends, 'Romeo and Juliet'));
// console.log(haveBook([], 'Romeo and Juliet'));

// ====================================================================================================================

// ====================================================================================================================

// -----------------------------------------TASK 5------------------------------------------//

// –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ 4 –º–µ—Ç–æ–¥–∏ –æ–±'—î–∫—Ç—É
// 1 –≤–∏–≤–æ–¥–∏—Ç—å —Å—É–º—É –Ω–∞ –∫–∞—Ä—Ç—ñ (–Ω–∞–∑–≤—É –≤–≤–æ–¥–∏–º–æ –≤ prompt())
// 2 –¥–æ–¥–∞—î –Ω–æ–≤—É –∫–∞—Ä—Ç—É (–Ω–∞–∑–≤—É –≤–≤–æ–¥–∏–º–æ –≤ prompt())
// 3 –∑–Ω—è—Ç–∏ –∑ –∫–∞—Ä—Ç–∏ (–Ω–∞–∑–≤—É –≤–≤–æ–¥–∏–º–æ –≤ prompt() —Ç–∞ —Å—É–º—É –≤ prompt())
// 4 –¥–æ–¥–∞—Ç–∏ –Ω–∞ –∫–∞—Ä—Ç—É (–Ω–∞–∑–≤—É –≤–≤–æ–¥–∏–º–æ –≤ prompt() —Ç–∞ —Å—É–º—É –≤ prompt())

const bankSystem = {
    privat: 1000,
    mono: 1500,
};

// ====================================================================================================================

// ====================================================================================================================

// -----------------------------------------TASK 6------------------------------------------//

// –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ —à—É–∫–∞—Ç–∏ –Ω–∞—Ä—Ü–∏—Å–∞. –ì–æ–ª–æ–≤–Ω–∞ —É–º–æ–≤–∞ –Ω–∞—Ä—Ü–∏—Å–∞ –∑–Ω–∞—é—Ç—å –≤—Å—ñ, –Ω–∞—Ä—Ü–∏—Å –Ω–µ –∑–Ω–∞—î –Ω—ñ–∫–æ–≥–æ.

// const people1 = [{
//         name: 'Alex',
//         know: ['Eva', 'Jhon'],
//     },
//     {
//         name: 'Ivan',
//         know: ['Jhon', 'Alex']
//     },
//     {
//         name: 'Eva',
//         know: ['Alex','Jhon']
//     },
//     {
//         name: 'Jhon',
//         know: [Alex]
//     },
// ] //Not found

// const people2 = [{
//         name: 'Alex',
//         know: ['Eva', 'Jhon'],
//     },
//     {
//         name: 'Jhon',
//         know: []
//     },
//     {
//         name: 'Eva',
//         know: []
//     },
//     {
//         name: 'Ivan',
//         know: ['Jhon', 'Alex']
//     },
// ];// Not found

// const people3 = [{
//         name: 'Alex',
//         know: ['Eva', 'Jhon'],
//     },
//     {
//         name: 'Jhon',
//         know: []
//     },
//     {
//         name: 'Eva',
//         know: ['Alex', 'Jhon']
//     },
//     {
//         name: 'Ivan',
//         know: ['Jhon', 'Alex']
//     },
// ]; // Jhon

// -----------------------------------------TASK 7------------------------------------------//
// –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –ø—Ä–∏–π–º–∞—î 1 –ø–∞—Ä–∞–º–µ—Ç—Ä –º–∞—Å–∏–≤ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –º—É—Ç–æ–≤–∞–Ω–∏–π –º–∞—Å–∏–≤. –ü–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –º–∞—Å–∏–≤ —ñ —è–∫—â–æ –≤—ñ–Ω –º–∞—î –æ–±'—î–∫—Ç–∏ –≤ —è–∫–∏—Ö –¥—É–±–ª—é—é—Ç—å—Å—è –∞–π–¥—ñ —Ç–æ –∫–≤–æ–Ω—Ç—ñ—Ç—ñ —Ü–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ —Å–ø–ª—é—Å—É–≤–∞—Ç–∏ –∞ —Ç—ñ –æ–±—î'–∫—Ç–∏ –≤ —è–∫–∏—Ö –∞–π–¥—ñ —Å–ø—ñ–≤–ø–∞–≤ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑ –º–∞—Å–∏–≤—É.(–ü–æ—Ç—Ä—ñ–±–Ω–æ –º—É—Ç—É–≤–∞—Ç–∏ –º–∞—Å–∏–≤, —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–æ–≤–∏–π –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ)

// const products = [{
//     id: 'sku1',
//     qty: 1,
// }, {
//     id: 'sku2',
//     qty: 2,
// }, {
//     id: 'sku3',
//     qty: 3,
// }, {
//     id: 'sku1',
//     qty: 6,
// }, {
//     id: 'sku1',
//     qty: 8,
// }, {
//     id: 'sku2',
//     qty: 19,
// }, {
//     id: 'sku4',
//     qty: 1,
// }]
